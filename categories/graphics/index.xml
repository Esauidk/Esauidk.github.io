<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Graphics on Esau's Page</title><link>/categories/graphics/</link><description>Recent content in Graphics on Esau's Page</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 20 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="/categories/graphics/index.xml" rel="self" type="application/rss+xml"/><item><title>3D Graphics: Hierarchy Models</title><link>/p/3d-graphics-hierarchy-models/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>/p/3d-graphics-hierarchy-models/</guid><description>Matrix Transformation The reason we keep things like translations as a matrix transformation instead of a simple collumn addition is for EFFICIENCY.
If we wanted to do multiple transformations on an objects.
$$(M_N * &amp;hellip; * M_1) * P $$
is easier than
$$(M_2 * ((M_1 * P ) + T_1) + T_2)$$
We can calculate the overall matrix onces instead of doing multiple computations for multiple points
Types of transformation $$T(x,y,z) = Translation$$ $$S(x,y,z) = Scaling$$ $$Rx(theta) = \text{Rotation over x-axis}$$ $$Ry(theta) = \text{Rotation over y-axis}$$ $$Rz(theta) = \text{Rotation over z-axis}$$</description></item><item><title>3D Graphics Intro</title><link>/p/3d-graphics-intro/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>/p/3d-graphics-intro/</guid><description>Overview &amp;amp; Affine Transformation 3D Rotation Cos(theta) in the matrix scaling spots Sin(theta) and -Sin(theta) in the matrix sheering spots 2D Rotation $$ \begin{bmatrix} Cos(ϴ) &amp;amp; -Sin(ϴ) \ Sin(ϴ) &amp;amp; Cos(ϴ) \end{bmatrix}$$
3D Rotation $$ \begin{bmatrix} Cos(ϴ) &amp;amp; -Sin(ϴ) &amp;amp; 0 \ Sin(ϴ) &amp;amp; Cos(ϴ) &amp;amp; 0 \ 0 &amp;amp; 0 &amp;amp; 1 \end{bmatrix} $$
Homogeneous Coordinates Have an extra collumn in the transformation matrix to represent translation
2D Translation</description></item><item><title>DirectX 3D Intro</title><link>/p/directx-3d-intro/</link><pubDate>Wed, 22 Dec 2021 18:11:43 -0800</pubDate><guid>/p/directx-3d-intro/</guid><description>I&amp;rsquo;ve been exploring Direct X 3D and it&amp;rsquo;s implementation as a Graphics Engine! Wanted to share my notes on how to set it up in a quick and simple blog.
There is a bunch of overhead involving creating a window before setuping Direct X 3D, I will not be covering it in this blog, but plan to cover it in another blog.
All the code related to the contents of this blog come from my repository on Github</description></item></channel></rss>